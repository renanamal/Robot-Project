#ifndef SRC_MY_SPI_H_OLD_
#define SRC_MY_SPI_H_OLD_


#include <string.h>
#include <stdio.h>
#include "spidrv.h"
#include "em_core.h"
#include "sl_spidrv_instances.h"
#include "generalDefines.h"

// use SPI handle for EXP header (configured in project settings)
#define SPI_HANDLE                  sl_spidrv_encoderSPI_handle

#define BUFFER_SIZE 4

Ecode_t my_SPIDRV_MTransferB(SPIDRV_Handle_t handle, const void *txBuffer, void *rxBuffer, int countRX, int countTX);
void my_StartTransferDMA(SPIDRV_Handle_t handle, const void *txBuffer, void *rxBuffer, int countRX, int countTX,  SPIDRV_Callback_t callback);
void my_BlockingComplete(SPIDRV_Handle_t handle, Ecode_t transferStatus, int itemsTransferred);
Ecode_t my_TransferApiBlockingPrologue(SPIDRV_Handle_t handle, void *buffer, int count);
void my_WaitForTransferCompletion(SPIDRV_Handle_t handle);
void my_em1RequestAdd(SPIDRV_Handle_t handle);
#endif /* SRC_MY_SPI_H_OLD_ */
